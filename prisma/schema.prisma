generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// TABEL DIMENSI: Menyimpan daftar perusahaan
model Company {
  id    Int    @id @default(autoincrement()) // <-- Diubah ke Int & autoincrement
  name  String @unique
  type  String // "Holding" atau "Anper"

  headcounts           Headcount[]
  employeeStatusStats  EmployeeStatusStat[]
  educationStats       EducationStat[]
  levelStats           LevelStat[]
  ageStats             AgeStat[]
  lengthOfServiceStats LengthOfServiceStat[]
  productivityStats    ProductivityStat[]
  employeeCostStats   EmployeeCostStat[]
  kpiStats            KpiStat[]
  hcmaScores          HcmaScore[]
  cultureMaturityStats CultureMaturityStat[]
  employeeEngagementStats EmployeeEngagementStat[]
  organizationHealthStats OrganizationHealthStat[]
  organizationStructureStats OrganizationStructureStat[]
}

// --- TABEL FAKTA: Menyimpan data agregat per bulan per perusahaan ---

model Headcount {
  id          Int     @id @default(autoincrement()) // <-- Diubah
  month       Int
  year        Int
  maleCount   Int
  femaleCount Int
  totalCount  Int

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model EmployeeStatusStat {
  id             Int     @id @default(autoincrement()) // <-- Diubah
  month          Int
  year           Int
  permanentCount Int
  contractCount  Int

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model EducationStat {
  id          Int     @id @default(autoincrement()) // <-- Diubah
  month       Int
  year        Int
  smaSmkCount Int     @map("sma_smk_count") @default(0)
  d3Count     Int     @map("d3_count")
  s1Count     Int     @map("s1_count")
  s2Count     Int     @map("s2_count")
  s3Count     Int     @map("s3_count")

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model LevelStat {
  id        Int     @id @default(autoincrement()) // <-- Diubah
  month     Int
  year      Int
  bod1Count Int     @map("bod1_count")
  bod2Count Int     @map("bod2_count")
  bod3Count Int     @map("bod3_count")
  bod4Count Int     @map("bod4_count")

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model AgeStat {
  id             Int     @id @default(autoincrement()) // <-- Diubah
  month          Int
  year           Int
  under25Count   Int     @map("under_25_count")
  age26to40Count Int     @map("age_26_40_count")
  age41to50Count Int     @map("age_41_50_count")
  over50Count    Int     @map("over_50_count")

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model LengthOfServiceStat {
  id                Int     @id @default(autoincrement()) // <-- Diubah
  month             Int
  year              Int
  los_0_5_Count     Int     @map("los_0_5_count")
  los_6_10_Count    Int     @map("los_6_10_count")
  los_11_15_Count   Int     @map("los_11_15_count")
  los_16_20_Count   Int     @map("los_16_20_count")
  los_21_25_Count   Int     @map("los_21_25_count")
  los_25_30_Count   Int     @map("los_25_30_count")
  los_over_30_Count Int     @map("los_over_30_count")

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model ProductivityStat {
  id        Int     @id @default(autoincrement()) // <-- Diubah
  month     Int
  year      Int
  revenue   Float
  netProfit Float
  totalEmployeeCost Float @default(0)

  companyId Int     // <-- Diubah ke Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model EmployeeCostStat {
  id                  Int @id @default(autoincrement())
  month               Int
  year                Int
  
  salary              Float
  incentive           Float
  pension             Float
  others              Float
  trainingRecruitment Float @map("training_recruitment")

  companyId Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model KpiStat {
  id                  Int @id @default(autoincrement())
  month               Int
  year                Int
  
  kpiKorporasi        Float
  kpiHcTransformation Float @map("kpi_hc_transformation")

  companyId Int
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([year, month, companyId])
}

model HcmaScore {
  id                    Int     @id @default(autoincrement())
  year                  Int
  
  // Indikator Skor (sesuai mockup, tipe data Float untuk angka desimal)
  talentSuccession      Float
  rewardRecognition     Float
  learningDevelopment   Float
  performanceGoal       Float
  capacityStrategy      Float
  behaviourCulture      Float
  humanCapitalIt        Float
  leadership            Float
  
  // Total Skor
  totalScore            Float

  // Relasi ke Company
  companyId             Int
  company               Company @relation(fields: [companyId], references: [id])

  @@unique([year, companyId])
}

model CultureMaturityStat {
  id          Int     @id @default(autoincrement())
  year        Int
  companyId   Int
  
  amanah      Float
  kompeten    Float
  harmonis    Float
  loyal       Float
  adaptif     Float
  kolaboratif Float
  totalScore  Float

  company     Company @relation(fields: [companyId], references: [id])

  @@unique([year, companyId])
}

model EmployeeEngagementStat {
  id         Int     @id @default(autoincrement())
  year       Int
  companyId  Int
  
  say        Float
  stay       Float
  strive     Float
  totalScore Float

  company    Company @relation(fields: [companyId], references: [id])

  @@unique([year, companyId])
}

model OrganizationHealthStat {
  id                    Int     @id @default(autoincrement())
  year                  Int
  companyId             Int

  // 9 Indikator Baru
  accountability        Float
  motivation            Float
  coordinationControl   Float   @map("coordination_control")
  leadership            Float
  innovationLearning    Float   @map("innovation_learning")
  externalOrientation   Float   @map("external_orientation")
  direction             Float
  capabilities          Float
  workEnvironment       Float   @map("work_environment")

  // Skor total
  totalScore            Float

  company               Company @relation(fields: [companyId], references: [id])

  @@unique([year, companyId])
}

model OrganizationStructureStat {
  id                    Int     @id @default(autoincrement())
  year                  Int
  companyId             Int

  // Data untuk Chart "Employee Formation Rasio"
  risikoTataKelola      Float   @map("risiko_tata_kelola")
  sdmUmum               Float   @map("sdm_umum")
  keuangan              Float
  it                    Float
  operasional           Float
  bisnis                Float
  cabang                Float

  // Data untuk Kartu Informasi
  enablerCount          Int     @map("enabler_count")
  revenueGeneratorCount Int     @map("revenue_generator_count")
  divisionCount         Int     @map("division_count")
  departmentCount       Int     @map("department_count")
  avgSpanDepartment     Int     @map("avg_span_department")
  avgSpanEmployee       Int     @map("avg_span_employee")

  company               Company @relation(fields: [companyId], references: [id])

  @@unique([year, companyId])
}